[{"C:\\Users\\taoin\\React projects\\cats\\src\\index.js":"1","C:\\Users\\taoin\\React projects\\cats\\src\\App.js":"2","C:\\Users\\taoin\\React projects\\cats\\src\\components\\Question\\question.js":"3","C:\\Users\\taoin\\React projects\\cats\\src\\assets\\arrays\\cats.js":"4","C:\\Users\\taoin\\React projects\\cats\\src\\assets\\arrays\\questions.js":"5","C:\\Users\\taoin\\React projects\\cats\\src\\components\\Catswiper\\catSwiper.js":"6","C:\\Users\\taoin\\React projects\\cats\\src\\components\\Catswiper\\CatSwiper.js":"7","C:\\Users\\taoin\\React projects\\cats\\src\\components\\CatSwiper\\catSwiper.js":"8","C:\\Users\\taoin\\React projects\\cats adoption app\\src\\index.js":"9","C:\\Users\\taoin\\React projects\\cats adoption app\\src\\App.js":"10","C:\\Users\\taoin\\React projects\\cats adoption app\\src\\components\\Question\\question.js":"11","C:\\Users\\taoin\\React projects\\cats adoption app\\src\\assets\\arrays\\cats.js":"12","C:\\Users\\taoin\\React projects\\cats adoption app\\src\\components\\CatSwiper\\catSwiper.js":"13","C:\\Users\\taoin\\React projects\\cats adoption app\\src\\assets\\arrays\\questions.js":"14"},{"size":262,"mtime":1681900613473,"results":"15","hashOfConfig":"16"},{"size":2679,"mtime":1690445022211,"results":"17","hashOfConfig":"16"},{"size":592,"mtime":1689877475308,"results":"18","hashOfConfig":"16"},{"size":20444,"mtime":1694950824341,"results":"19","hashOfConfig":"16"},{"size":976,"mtime":1689241617769,"results":"20","hashOfConfig":"16"},{"size":1015,"mtime":1682503152986,"results":"21","hashOfConfig":"22"},{"size":1015,"mtime":1682503152986,"results":"23","hashOfConfig":"22"},{"size":7161,"mtime":1689877802633,"results":"24","hashOfConfig":"16"},{"size":262,"mtime":1681900613473,"results":"25","hashOfConfig":"26"},{"size":3320,"mtime":1703155505959,"results":"27","hashOfConfig":"26"},{"size":602,"mtime":1703155505975,"results":"28","hashOfConfig":"26"},{"size":27271,"mtime":1703155505975,"results":"29","hashOfConfig":"26"},{"size":7185,"mtime":1703155505975,"results":"30","hashOfConfig":"26"},{"size":976,"mtime":1689241617769,"results":"31","hashOfConfig":"26"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1t4lvum",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1v74r3i",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"3wcuug",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\taoin\\React projects\\cats\\src\\index.js",[],[],[],"C:\\Users\\taoin\\React projects\\cats\\src\\App.js",["78","79"],[],"C:\\Users\\taoin\\React projects\\cats\\src\\components\\Question\\question.js",[],[],"C:\\Users\\taoin\\React projects\\cats\\src\\assets\\arrays\\cats.js",[],[],"C:\\Users\\taoin\\React projects\\cats\\src\\assets\\arrays\\questions.js",[],[],"C:\\Users\\taoin\\React projects\\cats\\src\\components\\Catswiper\\catSwiper.js",["80","81"],[],"C:\\Users\\taoin\\React projects\\cats\\src\\components\\Catswiper\\CatSwiper.js",["82","83"],[],"C:\\Users\\taoin\\React projects\\cats\\src\\components\\CatSwiper\\catSwiper.js",["84","85","86","87"],[],"C:\\Users\\taoin\\React projects\\cats adoption app\\src\\index.js",[],[],[],"C:\\Users\\taoin\\React projects\\cats adoption app\\src\\App.js",["88","89"],[],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport { cats } from './assets/arrays/cats';\r\nimport { questions } from './assets/arrays/questions';\r\nimport wool from './assets/images/wool2.png';\r\nimport Question from './components/Question/question.js';\r\nimport CatSwiper from './components/CatSwiper/catSwiper.js';\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n  const [currentStep, setStep] = useState(1);\r\n\r\n  const [userAnswers, setAnswers] = useState([]);\r\n\r\n  const [filteredCats, setFilteredCats] = useState([]);\r\n\r\n  const [showWarning, setShowWarning] = useState(true);\r\n\r\n  console.log(userAnswers);\r\n\r\n\r\n  function handleNextStep(event) {\r\n\r\n    const questionNumber = event.target.value; //care\r\n    setAnswers(prevAnswers => [...prevAnswers, JSON.parse(questionNumber.toLowerCase())]); //care here\r\n    setStep(currentStep + 1);\r\n  }\r\n\r\n\r\n  function handlePreviousStep() {\r\n\r\n    setAnswers(prevAnswers => {\r\n      const deleteAnswer = [...prevAnswers];\r\n      deleteAnswer.pop();\r\n      return deleteAnswer;\r\n    })\r\n    setStep(currentStep - 1);\r\n  }\r\n\r\n\r\n  function filterCats() {\r\n\r\n    const filteredCats = cats.filter(obj => {\r\n      let match = true;\r\n      for (let i = 0; i < userAnswers.length; i++) {\r\n        const catProp = Object.keys(obj)[i];\r\n        if (obj[catProp] !== userAnswers[i]) {\r\n          match = false;\r\n          break;\r\n        }\r\n      }\r\n      return match;\r\n    });\r\n    setFilteredCats(filteredCats);\r\n  }\r\n\r\n\r\n  function filterAndStep() {\r\n    filterCats()\r\n    setStep(currentStep + 1)\r\n  }\r\n\r\n  const toggleWarning = () => {\r\n    setShowWarning(!showWarning);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      {showWarning &&\r\n        <div className='warning'>\r\n          <p>Warning!</p>\r\n          Last times, the foundation I am helping, was splitted in two separate ones.\r\n          Therefore some of the links to the cats on foundation's site may not work.\r\n          The rest of the app should work correctly.\r\n          Thank you for understanding!\r\n          <button className=\"warningBtn\" onClick={toggleWarning}>OK</button>\r\n        </div>\r\n      }\r\n\r\n      {questions.map((question, index) => (\r\n\r\n        currentStep === index + 1 && index <= questions.length + 1 && (\r\n\r\n          <div className=\"quiz-container\">\r\n            <Question\r\n              userQuestion={question.question}\r\n              userAnswer1={question.leftBtn}\r\n              userAnswer2={question.rightBtn}\r\n              currentStep={currentStep}\r\n              handleNextStep={handleNextStep}\r\n            />\r\n            {index > 0 &&\r\n              <button className=\"wool\" onClick={handlePreviousStep}><img src={wool} /></button>\r\n            }\r\n\r\n          </div>\r\n        )\r\n      ))}\r\n\r\n      {currentStep === questions.length + 1 && (\r\n        <div>\r\n          <button onClick={filterAndStep} className='show-cats-btn'>Kliknij i poznaj kandydat√≥w!</button>\r\n          <button className=\"wool\" onClick={handlePreviousStep}><img src={wool} /></button>\r\n        </div>\r\n      )}\r\n\r\n      {currentStep === questions.length + 2 && (\r\n\r\n\r\n        <CatSwiper\r\n          firstArray={filteredCats}\r\n          secondArray={userAnswers}\r\n          setAnswers={setAnswers}\r\n          setNewCats={filterCats}\r\n        />\r\n\r\n      )}\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\taoin\\React projects\\cats adoption app\\src\\components\\Question\\question.js",[],[],"C:\\Users\\taoin\\React projects\\cats adoption app\\src\\assets\\arrays\\cats.js",[],[],"C:\\Users\\taoin\\React projects\\cats adoption app\\src\\components\\CatSwiper\\catSwiper.js",["90","91","92","93"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"./catSwiper.scss\";\r\nimport '../../../node_modules/swiper/swiper.scss';\r\nimport { EffectCards, Pagination } from \"swiper\";\r\nimport \"swiper/css/pagination\";\r\nimport { cats } from '../../assets/arrays/cats';\r\n\r\n\r\nfunction CatSwiper(props) {\r\n\r\n\r\n    const answers = props.secondArray;\r\n\r\n\r\n    const handleAnswerChange = (index, changed) => {\r\n        props.setAnswers(() => {\r\n            const newAnswers = [...props.secondArray];\r\n            newAnswers[index] = changed;\r\n            return newAnswers;\r\n        })\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        function filterCats(newAnswers) {\r\n            const newCats = cats.filter(obj => {\r\n                let match = true;\r\n                for (let i = 0; i < newAnswers.length; i++) {\r\n                    const catProp = Object.keys(obj)[i];\r\n                    if (obj[catProp] !== newAnswers[i]) {\r\n                        match = false;\r\n                        break;\r\n                    }\r\n                }\r\n                return match;\r\n            });\r\n\r\n            props.setNewCats(newCats);\r\n        }\r\n        filterCats(props.secondArray);\r\n    }, [props.firstArray]);\r\n\r\n\r\n\r\n    if (props.firstArray.length == 0) {\r\n\r\n        return (\r\n\r\n\r\n            <div className=\"no-cats-alert\">\r\n                <div>Ups! Obecnie nie mamy kot√≥w, kt√≥re spe≈Çnia≈Çyby Twoje\r\n                    potrzeby! :( Je≈õli chcesz, mo≈ºesz wr√≥ciƒá p√≥≈∫niej - nowi podopieczni stale do nas przybywajƒÖ! -\r\n                    lub spr√≥bowaƒá zmieniƒá niekt√≥re odpowiedzi. Czasem kot, kt√≥ry lubi inne koty,\r\n                    mo≈ºe byƒá r√≥wnie≈º wspania≈Çym jedynakiem - a wiek czƒôsto nie ma znaczenia ;).\r\n                </div>\r\n                <div>\r\n\r\n                    <form>\r\n\r\n                        <div>\r\n                            <input type=\"radio\" id=\"doeslikecats1\" name=\"likes other cats\" value={true} checked={answers[0] === true}\r\n                                onChange={() => handleAnswerChange(0, true)} />\r\n                            <label for=\"doeslikecats1\">Lubi koty</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"radio\" id=\"doeslikecats1\" name=\"likes other cats\" value={false} checked={answers[0] === false}\r\n                                onChange={() => handleAnswerChange(0, false)} />\r\n                            <label for=\"doeslikecats1\">Nie lubi kot√≥w</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"radio\" id=\"attitude1\" name=\"likes cuddles\" value={true} checked={answers[1] === true}\r\n                                onChange={() => handleAnswerChange(1, true)} />\r\n                            <label for=\"attitude1\">Miziak</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"radio\" id=\"attitude2\" name=\"likes cuddles\" value={false} checked={answers[1] === false}\r\n                                onChange={() => handleAnswerChange(1, false)} />\r\n                            <label for=\"attitude2\">Samotnik</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"radio\" id=\"character1\" name=\"is energetic\" value={true} checked={answers[2] === true}\r\n                                onChange={() => handleAnswerChange(2, true)} />\r\n                            <label for=\"character1\">Energiczny</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"radio\" id=\"character2\" name=\"is energetic\" value={false} checked={answers[2] === false}\r\n                                onChange={() => handleAnswerChange(2, false)} />\r\n                            <label for=\"character2\">Spokojny</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"radio\" id=\"isyoung1\" name=\"is young\" value={true} checked={answers[3] === true}\r\n                                onChange={() => handleAnswerChange(3, true)} />\r\n                            <label for=\"isyoung1\">M≈Çodszy</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"radio\" id=\"isyoung2\" name=\"is young\" value={false} checked={answers[3] === false}\r\n                                onChange={() => handleAnswerChange(3, false)} />\r\n                            <label for=\"isyoung2\">Starszy</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"radio\" id=\"doeslikedogs1\" name=\"likes dogs\" value={true} checked={answers[4] === true}\r\n                                onChange={() => handleAnswerChange(4, true)} />\r\n                            <label for=\"doeslikedogs1\">Lubi psy</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"radio\" id=\"doeslikedogs2\" name=\"likes dogs\" value={false} checked={answers[4] === false}\r\n                                onChange={() => handleAnswerChange(4, false)} />\r\n                            <label for=\"doeslikedogs2\">Nie lubi ps√≥w</label>\r\n                        </div>\r\n\r\n\r\n                        <div>\r\n                            <input type=\"radio\" id=\"ishealthy1\" name=\"is healthy\" value={true} checked={answers[5] === true}\r\n                                onChange={() => handleAnswerChange(5, true)} />\r\n                            <label for=\"ishealthy1\">Zdrowy</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"radio\" id=\"ishealthy2\" name=\"is healthy\" value={false} checked={answers[5] === false}\r\n                                onChange={() => handleAnswerChange(5, false)} />\r\n                            <label for=\"ishealthy2\">Chory</label>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div >\r\n            </div >\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div>\r\n                <Swiper\r\n                    pagination={{\r\n                        type: \"progressbar\"\r\n                    }}\r\n                    navigation={true}\r\n                    effect={\"cards\"}\r\n                    grabCursor={true}\r\n                    modules={[EffectCards, Pagination]}\r\n                    className=\"mySwiper\"\r\n                >\r\n\r\n                    {props.firstArray.map((obj, index) => (\r\n                        <SwiperSlide key={index}>\r\n                            <div className=\"swiper-content\">\r\n                                <div className=\"cat-swiper-name\">{obj.name}</div>\r\n                                <div className=\"cat-swiper-img\"><img src={obj.img}></img></div>\r\n                                <div className=\"cat-swiper-url\"><a href={obj.url}>Zobacz!</a></div>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CatSwiper;","C:\\Users\\taoin\\React projects\\cats adoption app\\src\\assets\\arrays\\questions.js",[],[],{"ruleId":"94","severity":1,"message":"95","line":84,"column":69,"nodeType":"96","endLine":84,"endColumn":87},{"ruleId":"94","severity":1,"message":"95","line":94,"column":65,"nodeType":"96","endLine":94,"endColumn":83},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":23},{"ruleId":"97","severity":1,"message":"101","line":1,"column":25,"nodeType":"99","messageId":"100","endLine":1,"endColumn":33},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":23},{"ruleId":"97","severity":1,"message":"101","line":1,"column":25,"nodeType":"99","messageId":"100","endLine":1,"endColumn":33},{"ruleId":"97","severity":1,"message":"101","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":43,"column":8,"nodeType":"104","endLine":43,"endColumn":26,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":47,"column":33,"nodeType":"108","messageId":"109","endLine":47,"endColumn":35},{"ruleId":"94","severity":1,"message":"95","line":159,"column":65,"nodeType":"96","endLine":159,"endColumn":84},{"ruleId":"94","severity":1,"message":"95","line":98,"column":69,"nodeType":"96","endLine":98,"endColumn":87},{"ruleId":"94","severity":1,"message":"95","line":108,"column":65,"nodeType":"96","endLine":108,"endColumn":83},{"ruleId":"97","severity":1,"message":"101","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":43,"column":8,"nodeType":"104","endLine":43,"endColumn":26,"suggestions":"110"},{"ruleId":"106","severity":1,"message":"107","line":47,"column":33,"nodeType":"108","messageId":"109","endLine":47,"endColumn":35},{"ruleId":"94","severity":1,"message":"95","line":159,"column":65,"nodeType":"96","endLine":159,"endColumn":84},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["111"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["112"],{"desc":"113","fix":"114"},{"desc":"113","fix":"115"},"Update the dependencies array to be: [props, props.firstArray]",{"range":"116","text":"117"},{"range":"118","text":"117"},[1237,1255],"[props, props.firstArray]",[1237,1255]]